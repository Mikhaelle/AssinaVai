{"ast":null,"code":"import _classCallCheck from \"/home/mikhaelle/Documentos/Testes/new2/react_file_uploader/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/mikhaelle/Documentos/Testes/new2/react_file_uploader/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/mikhaelle/Documentos/Testes/new2/react_file_uploader/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/mikhaelle/Documentos/Testes/new2/react_file_uploader/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/mikhaelle/Documentos/Testes/new2/react_file_uploader/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/mikhaelle/Documentos/Testes/new2/react_file_uploader/client/src/components/Reactpdf.js\";\nimport React, { Component } from 'react';\nimport { Document, Page } from 'react-pdf';\n\nvar Reactpdf =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Reactpdf, _Component);\n\n  function Reactpdf() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Reactpdf);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Reactpdf)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      numPages: null,\n      pageNumber: 1\n    };\n\n    _this.onDocumentLoadSuccess = function (_ref) {\n      var numPages = _ref.numPages;\n\n      _this.setState({\n        numPages: numPages\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Reactpdf, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          pageNumber = _this$state.pageNumber,\n          numPages = _this$state.numPages;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(Document, {\n        file: \"somefile.pdf\",\n        onLoadSuccess: this.onDocumentLoadSuccess,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(Page, {\n        pageNumber: pageNumber,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"Page \", pageNumber, \" of \", numPages));\n    }\n  }]);\n\n  return Reactpdf;\n}(Component);\n\nexport default Reactpdf;","map":{"version":3,"sources":["/home/mikhaelle/Documentos/Testes/new2/react_file_uploader/client/src/components/Reactpdf.js"],"names":["React","Component","Document","Page","Reactpdf","state","numPages","pageNumber","onDocumentLoadSuccess","setState"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,EAAmBC,IAAnB,QAA+B,WAA/B;;IAEMC,Q;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,QAAQ,EAAE,IADJ;AAENC,MAAAA,UAAU,EAAE;AAFN,K;;UAKRC,qB,GAAwB,gBAAkB;AAAA,UAAfF,QAAe,QAAfA,QAAe;;AACxC,YAAKG,QAAL,CAAc;AAAEH,QAAAA,QAAQ,EAARA;AAAF,OAAd;AACD,K;;;;;;;6BAEQ;AAAA,wBAC0B,KAAKD,KAD/B;AAAA,UACCE,UADD,eACCA,UADD;AAAA,UACaD,QADb,eACaA,QADb;AAGP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AACE,QAAA,IAAI,EAAC,cADP;AAEE,QAAA,aAAa,EAAE,KAAKE,qBAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE,oBAAC,IAAD;AAAM,QAAA,UAAU,EAAED,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,CADF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAASA,UAAT,UAAyBD,QAAzB,CAPF,CADF;AAWD;;;;EAxBoBL,S;;AA2BvB,eAAeG,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Document, Page } from 'react-pdf';\n \nclass Reactpdf extends Component {\n  state = {\n    numPages: null,\n    pageNumber: 1,\n  }\n \n  onDocumentLoadSuccess = ({ numPages }) => {\n    this.setState({ numPages });\n  }\n \n  render() {\n    const { pageNumber, numPages } = this.state;\n \n    return (\n      <div>\n        <Document\n          file=\"somefile.pdf\"\n          onLoadSuccess={this.onDocumentLoadSuccess}\n        >\n          <Page pageNumber={pageNumber} />\n        </Document>\n        <p>Page {pageNumber} of {numPages}</p>\n      </div>\n    );\n  }\n}\n\nexport default Reactpdf;"]},"metadata":{},"sourceType":"module"}