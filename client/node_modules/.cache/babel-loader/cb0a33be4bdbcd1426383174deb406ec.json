{"ast":null,"code":"import _regeneratorRuntime from \"/home/mikhaelle/Documentos/Testes/new2/react_file_uploader/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/mikhaelle/Documentos/Testes/new2/react_file_uploader/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/mikhaelle/Documentos/Testes/new2/react_file_uploader/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/mikhaelle/Documentos/Testes/new2/react_file_uploader/client/src/components/FileUpload.js\";\n\nimport React, { Fragment, useState, Component } from 'react';\nimport Message from './Message';\nimport Progress from './Progress';\nimport axios from 'axios';\nimport { Document, Page } from 'react-pdf';\n\nvar FileUpload = function FileUpload() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      file = _useState2[0],\n      setFile = _useState2[1];\n\n  var _useState3 = useState('Choose File'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      filename = _useState4[0],\n      setFilename = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      uploadedFile = _useState6[0],\n      setUploadedFile = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      message = _useState8[0],\n      setMessage = _useState8[1];\n\n  var _useState9 = useState(0),\n      _useState10 = _slicedToArray(_useState9, 2),\n      uploadPercentage = _useState10[0],\n      setUploadPercentage = _useState10[1];\n\n  onDocumentLoadSuccess = function onDocumentLoadSuccess(document) {\n    var numPages = document.numPages;\n\n    _this.setState({\n      numPages: numPages\n    });\n  };\n\n  var onChange = function onChange(e) {\n    setFile(e.target.files[0]);\n    setFilename(e.target.files[0].name);\n  };\n\n  var onSubmit =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(e) {\n      var formData, res, _res$data, fileName, filePath;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              formData = new FormData();\n              formData.append('file', file);\n              _context.prev = 3;\n              _context.next = 6;\n              return axios.post('/upload', formData, {\n                headers: {\n                  'Content-Type': 'multipart/form-data'\n                },\n                onUploadProgress: function onUploadProgress(progressEvent) {\n                  setUploadPercentage(parseInt(Math.round(progressEvent.loaded * 100 / progressEvent.total))); // Clear percentage\n\n                  setTimeout(function () {\n                    return setUploadPercentage(0);\n                  }, 10000);\n                }\n              });\n\n            case 6:\n              res = _context.sent;\n              _res$data = res.data, fileName = _res$data.fileName, filePath = _res$data.filePath;\n              setUploadedFile({\n                fileName: fileName,\n                filePath: filePath\n              });\n              setMessage('File Uploaded');\n              _context.next = 15;\n              break;\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](3);\n\n              if (_context.t0.response.status === 500) {\n                setMessage('There was a problem with the server');\n              } else {\n                setMessage(_context.t0.response.data.msg);\n              }\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[3, 12]]);\n    }));\n\n    return function onSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, message ? React.createElement(Message, {\n    msg: message,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }) : null, React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"custom-file mb-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"file\",\n    className: \"custom-file-input\",\n    id: \"customFile\",\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    className: \"custom-file-label\",\n    htmlFor: \"customFile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, filename)), React.createElement(Progress, {\n    percentage: uploadPercentage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Upload\",\n    className: \"btn btn-primary btn-block mt-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  })), uploadedFile ? React.createElement(\"div\", {\n    className: \"row mt-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-md-6 m-auto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, uploadedFile.fileName), React.createElement(Document, {\n    file: uploadedFile.filePath,\n    onLoadSuccess: _this.onDocumentLoadSuccess,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, Array.from(new Array(numPages), function (el, index) {\n    return React.createElement(Page, {\n      key: \"page_\".concat(index + 1),\n      pageNumber: index + 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    });\n  })), React.createElement(\"img\", {\n    style: {\n      width: '100%'\n    },\n    src: uploadedFile.filePath,\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }))) : null);\n};\n\nexport default FileUpload;","map":{"version":3,"sources":["/home/mikhaelle/Documentos/Testes/new2/react_file_uploader/client/src/components/FileUpload.js"],"names":["React","Fragment","useState","Component","Message","Progress","axios","Document","Page","FileUpload","file","setFile","filename","setFilename","uploadedFile","setUploadedFile","message","setMessage","uploadPercentage","setUploadPercentage","onDocumentLoadSuccess","document","numPages","setState","onChange","e","target","files","name","onSubmit","preventDefault","formData","FormData","append","post","headers","onUploadProgress","progressEvent","parseInt","Math","round","loaded","total","setTimeout","res","data","fileName","filePath","response","status","msg","Array","from","el","index","width"],"mappings":"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","sourcesContent":["import React, { Fragment, useState , Component} from 'react';\nimport Message from './Message';\nimport Progress from './Progress';\nimport axios from 'axios';\nimport { Document, Page } from 'react-pdf';\n\nconst FileUpload = () => {\n  const [file, setFile] = useState('');\n  const [filename, setFilename] = useState('Choose File');\n  const [uploadedFile, setUploadedFile] = useState({});\n  const [message, setMessage] = useState('');\n  const [uploadPercentage, setUploadPercentage] = useState(0);\n  \n\n  onDocumentLoadSuccess = (document) => {\n    const { numPages } = document;\n    this.setState({\n      numPages,\n    });\n  };\n\n  const onChange = e => {\n    setFile(e.target.files[0]);\n    setFilename(e.target.files[0].name);\n  };\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('file', file);\n\n    try {\n      const res = await axios.post('/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n        onUploadProgress: progressEvent => {\n          setUploadPercentage(\n            parseInt(\n              Math.round((progressEvent.loaded * 100) / progressEvent.total)\n            )\n          );\n\n          // Clear percentage\n          setTimeout(() => setUploadPercentage(0), 10000);\n        }\n      });\n\n      const { fileName, filePath } = res.data;\n\n      setUploadedFile({ fileName, filePath });\n\n      setMessage('File Uploaded');\n    } catch (err) {\n      if (err.response.status === 500) {\n        setMessage('There was a problem with the server');\n      } else {\n        setMessage(err.response.data.msg);\n      }\n    }\n  };\n\n  return (\n    <Fragment>\n      {message ? <Message msg={message} /> : null}\n      <form onSubmit={onSubmit}>\n        <div className='custom-file mb-4'>\n          <input\n            type='file'\n            className='custom-file-input'\n            id='customFile'\n            onChange={onChange}\n          />\n          <label className='custom-file-label' htmlFor='customFile'>\n            {filename}\n          </label>\n        </div>\n\n        <Progress percentage={uploadPercentage} />\n\n        <input\n          type='submit'\n          value='Upload'\n          className='btn btn-primary btn-block mt-4'\n        />\n      </form>\n      {uploadedFile ? (\n        <div className='row mt-5'>\n          <div className='col-md-6 m-auto'>\n            <h3 className='text-center'>{uploadedFile.fileName}</h3>\n            <Document\n        file={uploadedFile.filePath}\n        onLoadSuccess={this.onDocumentLoadSuccess}\n      >\n        {Array.from(\n          new Array(numPages),\n          (el, index) => (\n            <Page\n              key={`page_${index + 1}`}\n              pageNumber={index + 1}\n            />\n          ),\n        )}\n      </Document>\n            <img style={{ width: '100%' }} src={uploadedFile.filePath} alt='' />\n          </div>\n        </div>\n      ) : null}\n    </Fragment>\n  );\n};\n\nexport default FileUpload;\n"]},"metadata":{},"sourceType":"module"}